name: Deploy Static App

on:
  push:
    branches:
      - 'main'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

  deploy_backend_image:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: backend/Dockerfile
          # Note: tags has to be all lower-case
          tags: |
            ghcr.io/jim-fx/plantarium-backend:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: "Deploy to fly.io"
        run: flyctl deploy --remote-only 
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy_gh_pages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.7.0'

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: 'pnpm i && pnpm build'
        env:
          IS_GH_PAGES: true
          VITE_API_URL: ${{ secrets.API_URL }}

      - run: 'cp -r admin/build frontend/build/admin'
      - run: 'cp -r packages/ui/build frontend/build/ui'
      - run: 'cp -r packages/nodesystem/build frontend/build/nodes'
      - run: 'cp -r packages/geometry/build frontend/build/geometry'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./frontend/build

      - name: Deploy ðŸš€
        uses: actions/deploy-pages@v1
