import{interpolateSkeleton as t,join as e,tube as s,noise as n,arbitraryRotate as i}from"@plantarium/geometry";import{logger as r}from"@plantarium/helpers";const h={name:"Branches",type:"branch",outputs:["plant"],state:{input:{type:"plant",label:"plant",internal:!1},length:{type:["number","parameter","curve"],inputType:"slider",min:0,max:10,step:.05,value:0},thiccness:{type:"number",inputType:"slider",min:0,max:1,step:.01,value:.8},amount:{type:"number",min:0,max:20,value:1}},computeNode:t=>({type:"branch",parameters:t}),computeSkeleton(e){const{parameters:s}=e,{input:n}=s,{skeletons:i}=n.result,r=i.map(e=>{const s=[];for(let n=0;n<2;n++){const i=n/2,[r,h,u,a]=t(e,.5+.5*i),o=new Float32Array(200);for(let t=0;t<200;t++){const e=t/50;o[4*t+0]=r+1*e,o[4*t+1]=h,o[4*t+2]=u,o[4*t+3]=.2*a*(1-e)}s.push(o)}return s}).flat();return console.log("BRANCH",r),{skeletons:r}},computeGeometry(t,n){const i=n.getSetting("stemResX"),{parameters:{input:r},result:{skeletons:h}}=t;return{geometry:e(r.result.geometry,...h.map(t=>s(t,i)))}}};function u(t){let e=t[0],s=t[1],n=t[2];return Math.sqrt(e*e+s*s+n*n)}function a(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function o(t,e,s){return t[0]=e[0]+s[0],t[1]=e[1]+s[1],t[2]=e[2]+s[2],t}function l(t,e,s){return t[0]=e[0]-s[0],t[1]=e[1]-s[1],t[2]=e[2]-s[2],t}function c(t,e,s){return t[0]=e[0]*s,t[1]=e[1]*s,t[2]=e[2]*s,t}function p(t){let e=t[0],s=t[1],n=t[2];return e*e+s*s+n*n}function m(t,e){let s=e[0],n=e[1],i=e[2],r=s*s+n*n+i*i;return r>0&&(r=1/Math.sqrt(r)),t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t}function f(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function y(t,e,s){let n=e[0],i=e[1],r=e[2],h=s[0],u=s[1],a=s[2];return t[0]=i*a-r*u,t[1]=r*h-n*a,t[2]=n*u-i*h,t}const g=function(){const t=[0,0,0],e=[0,0,0];return function(s,n){a(t,s),a(e,n),m(t,t),m(e,e);let i=f(t,e);return i>1?0:i<-1?Math.PI:Math.acos(i)}}();class w extends Array{constructor(t=0,e=t,s=t){return super(t,e,s),this.constant=void 0,this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this[0]=t}set y(t){this[1]=t}set z(t){this[2]=t}set(t,e=t,s=t){return t.length?this.copy(t):(function(t,e,s,n){t[0]=e,t[1]=s,t[2]=n}(this,t,e,s),this)}copy(t){return a(this,t),this}add(t,e){return e?o(this,t,e):o(this,this,t),this}sub(t,e){return e?l(this,t,e):l(this,this,t),this}multiply(t){var e,s;return t.length?((e=this)[0]=this[0]*(s=t)[0],e[1]=this[1]*s[1],e[2]=this[2]*s[2]):c(this,this,t),this}divide(t){var e,s;return t.length?((e=this)[0]=this[0]/(s=t)[0],e[1]=this[1]/s[1],e[2]=this[2]/s[2]):c(this,this,1/t),this}inverse(t=this){var e,s;return(e=this)[0]=1/(s=t)[0],e[1]=1/s[1],e[2]=1/s[2],this}len(){return u(this)}distance(t){return t?function(t,e){let s=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(s*s+n*n+i*i)}(this,t):u(this)}squaredLen(){return p(this)}squaredDistance(t){return t?function(t,e){let s=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return s*s+n*n+i*i}(this,t):p(this)}negate(t=this){var e,s;return(e=this)[0]=-(s=t)[0],e[1]=-s[1],e[2]=-s[2],this}cross(t,e){return e?y(this,t,e):y(this,this,t),this}scale(t){return c(this,this,t),this}normalize(){return m(this,this),this}dot(t){return f(this,t)}equals(t){return this[0]===(e=t)[0]&&this[1]===e[1]&&this[2]===e[2];var e}applyMatrix4(t){return function(t,e,s){let n=e[0],i=e[1],r=e[2],h=s[3]*n+s[7]*i+s[11]*r+s[15];h=h||1,t[0]=(s[0]*n+s[4]*i+s[8]*r+s[12])/h,t[1]=(s[1]*n+s[5]*i+s[9]*r+s[13])/h,t[2]=(s[2]*n+s[6]*i+s[10]*r+s[14])/h}(this,this,t),this}scaleRotateMatrix4(t){return function(t,e,s){let n=e[0],i=e[1],r=e[2],h=s[3]*n+s[7]*i+s[11]*r+s[15];h=h||1,t[0]=(s[0]*n+s[4]*i+s[8]*r)/h,t[1]=(s[1]*n+s[5]*i+s[9]*r)/h,t[2]=(s[2]*n+s[6]*i+s[10]*r)/h}(this,this,t),this}applyQuaternion(t){return function(t,e,s){let n=e[0],i=e[1],r=e[2],h=s[0],u=s[1],a=s[2],o=u*r-a*i,l=a*n-h*r,c=h*i-u*n,p=u*c-a*l,m=a*o-h*c,f=h*l-u*o,y=2*s[3];o*=y,l*=y,c*=y,p*=2,m*=2,f*=2,t[0]=n+o+p,t[1]=i+l+m,t[2]=r+c+f}(this,this,t),this}angle(t){return g(this,t)}lerp(t,e){return function(t,e,s,n){let i=e[0],r=e[1],h=e[2];t[0]=i+n*(s[0]-i),t[1]=r+n*(s[1]-r),t[2]=h+n*(s[2]-h)}(this,this,t,e),this}clone(){return new w(this[0],this[1],this[2])}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t}transformDirection(t){const e=this[0],s=this[1],n=this[2];return this[0]=t[0]*e+t[4]*s+t[8]*n,this[1]=t[1]*e+t[5]*s+t[9]*n,this[2]=t[2]*e+t[6]*s+t[10]*n,this.normalize()}}function M(t,e,s){let n=e[0],i=e[1],r=e[2],h=e[3],u=e[4],a=e[5],o=e[6],l=e[7],c=e[8],p=e[9],m=e[10],f=e[11],y=e[12],g=e[13],w=e[14],M=e[15],v=s[0],d=s[1],x=s[2],q=s[3];return t[0]=v*n+d*u+x*c+q*y,t[1]=v*i+d*a+x*p+q*g,t[2]=v*r+d*o+x*m+q*w,t[3]=v*h+d*l+x*f+q*M,v=s[4],d=s[5],x=s[6],q=s[7],t[4]=v*n+d*u+x*c+q*y,t[5]=v*i+d*a+x*p+q*g,t[6]=v*r+d*o+x*m+q*w,t[7]=v*h+d*l+x*f+q*M,v=s[8],d=s[9],x=s[10],q=s[11],t[8]=v*n+d*u+x*c+q*y,t[9]=v*i+d*a+x*p+q*g,t[10]=v*r+d*o+x*m+q*w,t[11]=v*h+d*l+x*f+q*M,v=s[12],d=s[13],x=s[14],q=s[15],t[12]=v*n+d*u+x*c+q*y,t[13]=v*i+d*a+x*p+q*g,t[14]=v*r+d*o+x*m+q*w,t[15]=v*h+d*l+x*f+q*M,t}function v(t,e){let s=e[4],n=e[5],i=e[6],r=e[8],h=e[9],u=e[10];return t[0]=Math.hypot(e[0],e[1],e[2]),t[1]=Math.hypot(s,n,i),t[2]=Math.hypot(r,h,u),t}new w,new w;const d=function(){const t=[0,0,0];return function(e,s){let n=t;v(n,s);let i=1/n[0],r=1/n[1],h=1/n[2],u=s[0]*i,a=s[1]*r,o=s[2]*h,l=s[4]*i,c=s[5]*r,p=s[6]*h,m=s[8]*i,f=s[9]*r,y=s[10]*h,g=u+c+y,w=0;return g>0?(w=2*Math.sqrt(g+1),e[3]=.25*w,e[0]=(p-f)/w,e[1]=(m-o)/w,e[2]=(a-l)/w):u>c&&u>y?(w=2*Math.sqrt(1+u-c-y),e[3]=(p-f)/w,e[0]=.25*w,e[1]=(a+l)/w,e[2]=(m+o)/w):c>y?(w=2*Math.sqrt(1+c-u-y),e[3]=(m-o)/w,e[0]=(a+l)/w,e[1]=.25*w,e[2]=(p+f)/w):(w=2*Math.sqrt(1+y-u-c),e[3]=(a-l)/w,e[0]=(m+o)/w,e[1]=(p+f)/w,e[2]=.25*w),e}}();class x extends Array{constructor(t=1,e=0,s=0,n=0,i=0,r=1,h=0,u=0,a=0,o=0,l=1,c=0,p=0,m=0,f=0,y=1){return super(t,e,s,n,i,r,h,u,a,o,l,c,p,m,f,y),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(t){this[12]=t}set y(t){this[13]=t}set z(t){this[14]=t}set w(t){this[15]=t}set(t,e,s,n,i,r,h,u,a,o,l,c,p,m,f,y){return t.length?this.copy(t):(function(t,e,s,n,i,r,h,u,a,o,l,c,p,m,f,y,g){t[0]=e,t[1]=s,t[2]=n,t[3]=i,t[4]=r,t[5]=h,t[6]=u,t[7]=a,t[8]=o,t[9]=l,t[10]=c,t[11]=p,t[12]=m,t[13]=f,t[14]=y,t[15]=g}(this,t,e,s,n,i,r,h,u,a,o,l,c,p,m,f,y),this)}translate(t,e=this){return function(t,e,s){let n,i,r,h,u,a,o,l,c,p,m,f,y=s[0],g=s[1],w=s[2];e===t?(t[12]=e[0]*y+e[4]*g+e[8]*w+e[12],t[13]=e[1]*y+e[5]*g+e[9]*w+e[13],t[14]=e[2]*y+e[6]*g+e[10]*w+e[14],t[15]=e[3]*y+e[7]*g+e[11]*w+e[15]):(n=e[0],i=e[1],r=e[2],h=e[3],u=e[4],a=e[5],o=e[6],l=e[7],c=e[8],p=e[9],m=e[10],f=e[11],t[0]=n,t[1]=i,t[2]=r,t[3]=h,t[4]=u,t[5]=a,t[6]=o,t[7]=l,t[8]=c,t[9]=p,t[10]=m,t[11]=f,t[12]=n*y+u*g+c*w+e[12],t[13]=i*y+a*g+p*w+e[13],t[14]=r*y+o*g+m*w+e[14],t[15]=h*y+l*g+f*w+e[15])}(this,e,t),this}rotate(t,e,s=this){return function(t,e,s,n){let i,r,h,u,a,o,l,c,p,m,f,y,g,w,M,v,d,x,q,A,C,b,k,z,S=n[0],X=n[1],Y=n[2],Z=Math.hypot(S,X,Y);Math.abs(Z)<1e-6||(Z=1/Z,S*=Z,X*=Z,Y*=Z,i=Math.sin(s),r=Math.cos(s),h=1-r,u=e[0],a=e[1],o=e[2],l=e[3],c=e[4],p=e[5],m=e[6],f=e[7],y=e[8],g=e[9],w=e[10],M=e[11],v=S*S*h+r,d=X*S*h+Y*i,x=Y*S*h-X*i,q=S*X*h-Y*i,A=X*X*h+r,C=Y*X*h+S*i,b=S*Y*h+X*i,k=X*Y*h-S*i,z=Y*Y*h+r,t[0]=u*v+c*d+y*x,t[1]=a*v+p*d+g*x,t[2]=o*v+m*d+w*x,t[3]=l*v+f*d+M*x,t[4]=u*q+c*A+y*C,t[5]=a*q+p*A+g*C,t[6]=o*q+m*A+w*C,t[7]=l*q+f*A+M*C,t[8]=u*b+c*k+y*z,t[9]=a*b+p*k+g*z,t[10]=o*b+m*k+w*z,t[11]=l*b+f*k+M*z,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]))}(this,s,t,e),this}scale(t,e=this){return function(t,e,s){let n=s[0],i=s[1],r=s[2];t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t[3]=e[3]*n,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=e[11]*r,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this,e,"number"==typeof t?[t,t,t]:t),this}multiply(t,e){return e?M(this,t,e):M(this,this,t),this}identity(){var t;return(t=this)[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}copy(t){var e,s;return(e=this)[0]=(s=t)[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],e[9]=s[9],e[10]=s[10],e[11]=s[11],e[12]=s[12],e[13]=s[13],e[14]=s[14],e[15]=s[15],this}fromPerspective({fov:t,aspect:e,near:s,far:n}={}){return function(t,e,s,n,i){let r=1/Math.tan(e/2),h=1/(n-i);t[0]=r/s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(i+n)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*i*n*h,t[15]=0}(this,t,e,s,n),this}fromOrthogonal({left:t,right:e,bottom:s,top:n,near:i,far:r}){return function(t,e,s,n,i,r,h){let u=1/(e-s),a=1/(n-i),o=1/(r-h);t[0]=-2*u,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*o,t[11]=0,t[12]=(e+s)*u,t[13]=(i+n)*a,t[14]=(h+r)*o,t[15]=1}(this,t,e,s,n,i,r),this}fromQuaternion(t){return function(t,e){let s=e[0],n=e[1],i=e[2],r=e[3],h=s+s,u=n+n,a=i+i,o=s*h,l=n*h,c=n*u,p=i*h,m=i*u,f=i*a,y=r*h,g=r*u,w=r*a;t[0]=1-c-f,t[1]=l+w,t[2]=p-g,t[3]=0,t[4]=l-w,t[5]=1-o-f,t[6]=m+y,t[7]=0,t[8]=p+g,t[9]=m-y,t[10]=1-o-c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(this,t),this}setPosition(t){return this.x=t[0],this.y=t[1],this.z=t[2],this}inverse(t=this){return function(t,e){let s=e[0],n=e[1],i=e[2],r=e[3],h=e[4],u=e[5],a=e[6],o=e[7],l=e[8],c=e[9],p=e[10],m=e[11],f=e[12],y=e[13],g=e[14],w=e[15],M=s*u-n*h,v=s*a-i*h,d=s*o-r*h,x=n*a-i*u,q=n*o-r*u,A=i*o-r*a,C=l*y-c*f,b=l*g-p*f,k=l*w-m*f,z=c*g-p*y,S=c*w-m*y,X=p*w-m*g,Y=M*X-v*S+d*z+x*k-q*b+A*C;Y&&(Y=1/Y,t[0]=(u*X-a*S+o*z)*Y,t[1]=(i*S-n*X-r*z)*Y,t[2]=(y*A-g*q+w*x)*Y,t[3]=(p*q-c*A-m*x)*Y,t[4]=(a*k-h*X-o*b)*Y,t[5]=(s*X-i*k+r*b)*Y,t[6]=(g*d-f*A-w*v)*Y,t[7]=(l*A-p*d+m*v)*Y,t[8]=(h*S-u*k+o*C)*Y,t[9]=(n*k-s*S-r*C)*Y,t[10]=(f*q-y*d+w*M)*Y,t[11]=(c*d-l*q-m*M)*Y,t[12]=(u*b-h*z-a*C)*Y,t[13]=(s*z-n*b+i*C)*Y,t[14]=(y*v-f*x-g*M)*Y,t[15]=(l*x-c*v+p*M)*Y)}(this,t),this}compose(t,e,s){return function(t,e,s,n){let i=e[0],r=e[1],h=e[2],u=e[3],a=i+i,o=r+r,l=h+h,c=i*a,p=i*o,m=i*l,f=r*o,y=r*l,g=h*l,w=u*a,M=u*o,v=u*l,d=n[0],x=n[1],q=n[2];t[0]=(1-(f+g))*d,t[1]=(p+v)*d,t[2]=(m-M)*d,t[3]=0,t[4]=(p-v)*x,t[5]=(1-(c+g))*x,t[6]=(y+w)*x,t[7]=0,t[8]=(m+M)*q,t[9]=(y-w)*q,t[10]=(1-(c+f))*q,t[11]=0,t[12]=s[0],t[13]=s[1],t[14]=s[2],t[15]=1}(this,t,e,s),this}getRotation(t){return d(t,this),this}getTranslation(t){var e;return(e=t)[0]=this[12],e[1]=this[13],e[2]=this[14],this}getScaling(t){return v(t,this),this}getMaxScaleOnAxis(){return function(t){let e=t[0],s=t[1],n=t[2],i=t[4],r=t[5],h=t[6],u=t[8],a=t[9],o=t[10];return Math.sqrt(Math.max(e*e+s*s+n*n,i*i+r*r+h*h,u*u+a*a+o*o))}(this)}lookAt(t,e,s){return function(t,e,s,n){let i=e[0],r=e[1],h=e[2],u=n[0],a=n[1],o=n[2],l=i-s[0],c=r-s[1],p=h-s[2],m=l*l+c*c+p*p;0===m?p=1:(m=1/Math.sqrt(m),l*=m,c*=m,p*=m);let f=a*p-o*c,y=o*l-u*p,g=u*c-a*l;m=f*f+y*y+g*g,0===m&&(o?u+=1e-6:a?o+=1e-6:a+=1e-6,f=a*p-o*c,y=o*l-u*p,g=u*c-a*l,m=f*f+y*y+g*g),m=1/Math.sqrt(m),f*=m,y*=m,g*=m,t[0]=f,t[1]=y,t[2]=g,t[3]=0,t[4]=c*g-p*y,t[5]=p*f-l*g,t[6]=l*y-c*f,t[7]=0,t[8]=l,t[9]=c,t[10]=p,t[11]=0,t[12]=i,t[13]=r,t[14]=h,t[15]=1}(this,t,e,s),this}determinant(){return function(t){let e=t[0],s=t[1],n=t[2],i=t[3],r=t[4],h=t[5],u=t[6],a=t[7],o=t[8],l=t[9],c=t[10],p=t[11],m=t[12],f=t[13],y=t[14],g=t[15];return(e*h-s*r)*(c*g-p*y)-(e*u-n*r)*(l*g-p*f)+(e*a-i*r)*(l*y-c*f)+(s*u-n*h)*(o*g-p*m)-(s*a-i*h)*(o*y-c*m)+(n*a-i*u)*(o*f-l*m)}(this)}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this[3]=t[e+3],this[4]=t[e+4],this[5]=t[e+5],this[6]=t[e+6],this[7]=t[e+7],this[8]=t[e+8],this[9]=t[e+9],this[10]=t[e+10],this[11]=t[e+11],this[12]=t[e+12],this[13]=t[e+13],this[14]=t[e+14],this[15]=t[e+15],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t[e+4]=this[4],t[e+5]=this[5],t[e+6]=this[6],t[e+7]=this[7],t[e+8]=this[8],t[e+9]=this[9],t[e+10]=this[10],t[e+11]=this[11],t[e+12]=this[12],t[e+13]=this[13],t[e+14]=this[14],t[e+15]=this[15],t}}function q(t,e,s){let n=e[0],i=e[1],r=e[2],h=e[3],u=s[0],a=s[1],o=s[2],l=s[3];return t[0]=n*l+h*u+i*o-r*a,t[1]=i*l+h*a+r*u-n*o,t[2]=r*l+h*o+n*a-i*u,t[3]=h*l-n*u-i*a-r*o,t}class A extends Array{constructor(t=0,e=0,s=0,n=1){return super(t,e,s,n),this.onChange=void 0,this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(t){this[0]=t,this.onChange()}set y(t){this[1]=t,this.onChange()}set z(t){this[2]=t,this.onChange()}set w(t){this[3]=t,this.onChange()}identity(){var t;return(t=this)[0]=0,t[1]=0,t[2]=0,t[3]=1,this.onChange(),this}set(t,e,s,n){return t.length?this.copy(t):(function(t,e,s,n,i){t[0]=e,t[1]=s,t[2]=n,t[3]=i}(this,t,e,s,n),this.onChange(),this)}rotateX(t){return function(t,e,s){s*=.5;let n=e[0],i=e[1],r=e[2],h=e[3],u=Math.sin(s),a=Math.cos(s);t[0]=n*a+h*u,t[1]=i*a+r*u,t[2]=r*a-i*u,t[3]=h*a-n*u}(this,this,t),this.onChange(),this}rotateY(t){return function(t,e,s){s*=.5;let n=e[0],i=e[1],r=e[2],h=e[3],u=Math.sin(s),a=Math.cos(s);t[0]=n*a-r*u,t[1]=i*a+h*u,t[2]=r*a+n*u,t[3]=h*a-i*u}(this,this,t),this.onChange(),this}rotateZ(t){return function(t,e,s){s*=.5;let n=e[0],i=e[1],r=e[2],h=e[3],u=Math.sin(s),a=Math.cos(s);t[0]=n*a+i*u,t[1]=i*a-n*u,t[2]=r*a+h*u,t[3]=h*a-r*u}(this,this,t),this.onChange(),this}inverse(t=this){return function(t,e){let s=e[0],n=e[1],i=e[2],r=e[3],h=s*s+n*n+i*i+r*r,u=h?1/h:0;t[0]=-s*u,t[1]=-n*u,t[2]=-i*u,t[3]=r*u}(this,t),this.onChange(),this}conjugate(t=this){var e,s;return(e=this)[0]=-(s=t)[0],e[1]=-s[1],e[2]=-s[2],e[3]=s[3],this.onChange(),this}copy(t){return(e=this)[0]=(s=t)[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],this.onChange(),this;var e,s}normalize(t=this){return function(t,e){let s=e[0],n=e[1],i=e[2],r=e[3],h=s*s+n*n+i*i+r*r;h>0&&(h=1/Math.sqrt(h)),t[0]=s*h,t[1]=n*h,t[2]=i*h,t[3]=r*h}(this,t),this.onChange(),this}multiply(t,e){return e?q(this,t,e):q(this,this,t),this.onChange(),this}dot(t){return(e=this)[0]*(s=t)[0]+e[1]*s[1]+e[2]*s[2]+e[3]*s[3];var e,s}fromMatrix3(t){return function(t,e){let s,n=e[0]+e[4]+e[8];if(n>0)s=Math.sqrt(n+1),t[3]=.5*s,s=.5/s,t[0]=(e[5]-e[7])*s,t[1]=(e[6]-e[2])*s,t[2]=(e[1]-e[3])*s;else{let n=0;e[4]>e[0]&&(n=1),e[8]>e[3*n+n]&&(n=2);let i=(n+1)%3,r=(n+2)%3;s=Math.sqrt(e[3*n+n]-e[3*i+i]-e[3*r+r]+1),t[n]=.5*s,s=.5/s,t[3]=(e[3*i+r]-e[3*r+i])*s,t[i]=(e[3*i+n]+e[3*n+i])*s,t[r]=(e[3*r+n]+e[3*n+r])*s}}(this,t),this.onChange(),this}fromEuler(t){return function(t,e,s="YXZ"){let n=Math.sin(.5*e[0]),i=Math.cos(.5*e[0]),r=Math.sin(.5*e[1]),h=Math.cos(.5*e[1]),u=Math.sin(.5*e[2]),a=Math.cos(.5*e[2]);"XYZ"===s?(t[0]=n*h*a+i*r*u,t[1]=i*r*a-n*h*u,t[2]=i*h*u+n*r*a,t[3]=i*h*a-n*r*u):"YXZ"===s?(t[0]=n*h*a+i*r*u,t[1]=i*r*a-n*h*u,t[2]=i*h*u-n*r*a,t[3]=i*h*a+n*r*u):"ZXY"===s?(t[0]=n*h*a-i*r*u,t[1]=i*r*a+n*h*u,t[2]=i*h*u+n*r*a,t[3]=i*h*a-n*r*u):"ZYX"===s?(t[0]=n*h*a-i*r*u,t[1]=i*r*a+n*h*u,t[2]=i*h*u-n*r*a,t[3]=i*h*a+n*r*u):"YZX"===s?(t[0]=n*h*a+i*r*u,t[1]=i*r*a+n*h*u,t[2]=i*h*u-n*r*a,t[3]=i*h*a-n*r*u):"XZY"===s&&(t[0]=n*h*a-i*r*u,t[1]=i*r*a-n*h*u,t[2]=i*h*u+n*r*a,t[3]=i*h*a+n*r*u)}(this,t,t.order),this}fromAxisAngle(t,e){return function(t,e,s){s*=.5;let n=Math.sin(s);t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=Math.cos(s)}(this,t,e),this}slerp(t,e){return function(t,e,s,n){let i,r,h,u,a,o=e[0],l=e[1],c=e[2],p=e[3],m=s[0],f=s[1],y=s[2],g=s[3];r=o*m+l*f+c*y+p*g,r<0&&(r=-r,m=-m,f=-f,y=-y,g=-g),1-r>1e-6?(i=Math.acos(r),h=Math.sin(i),u=Math.sin((1-n)*i)/h,a=Math.sin(n*i)/h):(u=1-n,a=n),t[0]=u*o+a*m,t[1]=u*l+a*f,t[2]=u*c+a*y,t[3]=u*p+a*g}(this,this,t,e),this}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this[2]=t[e+2],this[3]=t[e+3],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t[e+2]=this[2],t[e+3]=this[3],t}}function C(t,e,s){return t[0]=e[0]+s[0],t[1]=e[1]+s[1],t}function b(t,e,s){return t[0]=e[0]-s[0],t[1]=e[1]-s[1],t}function k(t,e,s){return t[0]=e[0]*s,t[1]=e[1]*s,t}function z(t){var e=t[0],s=t[1];return Math.sqrt(e*e+s*s)}function S(t,e){return t[0]*e[1]-t[1]*e[0]}new x,new x,new w,new w;class X extends Array{constructor(t=0,e=t){return super(t,e),this}get x(){return this[0]}get y(){return this[1]}set x(t){this[0]=t}set y(t){this[1]=t}set(t,e=t){return t.length?this.copy(t):(function(t,e,s){t[0]=e,t[1]=s}(this,t,e),this)}copy(t){var e,s;return(e=this)[0]=(s=t)[0],e[1]=s[1],this}add(t,e){return e?C(this,t,e):C(this,this,t),this}sub(t,e){return e?b(this,t,e):b(this,this,t),this}multiply(t){var e,s;return t.length?((e=this)[0]=this[0]*(s=t)[0],e[1]=this[1]*s[1]):k(this,this,t),this}divide(t){var e,s;return t.length?((e=this)[0]=this[0]/(s=t)[0],e[1]=this[1]/s[1]):k(this,this,1/t),this}inverse(t=this){var e,s;return(e=this)[0]=1/(s=t)[0],e[1]=1/s[1],this}len(){return z(this)}distance(t){return t?(s=(e=t)[0]-this[0],n=e[1]-this[1],Math.sqrt(s*s+n*n)):z(this);var e,s,n}squaredLen(){return this.squaredDistance()}squaredDistance(t){return t?(s=(e=t)[0]-this[0])*s+(n=e[1]-this[1])*n:function(t){var e=t[0],s=t[1];return e*e+s*s}(this);var e,s,n}negate(t=this){var e,s;return(e=this)[0]=-(s=t)[0],e[1]=-s[1],this}cross(t,e){return e?S(t,e):S(this,t)}scale(t){return k(this,this,t),this}normalize(){var t,e,s,n;return(n=(e=(t=this)[0])*e+(s=t[1])*s)>0&&(n=1/Math.sqrt(n)),this[0]=t[0]*n,this[1]=t[1]*n,this}dot(t){return this[0]*(e=t)[0]+this[1]*e[1];var e}equals(t){return this[0]===(e=t)[0]&&this[1]===e[1];var e}applyMatrix3(t){var e,s,n,i;return(e=this)[0]=(s=t)[0]*(n=this[0])+s[3]*(i=this[1])+s[6],e[1]=s[1]*n+s[4]*i+s[7],this}applyMatrix4(t){return function(t,e,s){let n=e[0],i=e[1];t[0]=s[0]*n+s[4]*i+s[12],t[1]=s[1]*n+s[5]*i+s[13]}(this,this,t),this}lerp(t,e){!function(t,e,s,n){var i=e[0],r=e[1];t[0]=i+n*(s[0]-i),t[1]=r+n*(s[1]-r)}(this,this,t,e)}clone(){return new X(this[0],this[1])}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t}}new w,new X,new X,new X,new X,new X,new w,new w,new w,new w,new w,new w,new w,new w,new w,new w,new w,new x,new w,new w,new w,new w,new w,new A,new w,new w,new A,new w,new x,new w,new w,new w,new w,new w,new A,new A,new A,new A,new x,new x;const Y=r("node.gravity"),Z=Object.values({__proto__:null,Branch:h,Gravity:{name:"Gravity",type:"gravity",outputs:["plant"],state:{input:{type:"pd"}},computeNode:t=>({type:"gravity",parameters:t}),computeSkeleton(t){const{input:e,type:s}=t.parameters;Y(s,.5);const{result:{skeletons:r}}=e;return"simple"===s?{skeletons:r.map((t,e)=>{const s=t.length/4;for(let i=1;i<s;i++){const r=t[4*i+0],h=t[4*i+1],u=t[4*i+2],a=[t[0],t[1],t[2]],o=i/s,l=.5*n.n1d(200*e)*o;t[4*i+0]=Math.cos(l)*(r-a[0])-Math.sin(l)*(h-a[1])+a[0],t[4*i+1]=Math.sin(l)*(r-a[0])+Math.cos(l)*(h-a[1])+a[1],t[4*i+2]=u}return t})}:{skeletons:r.map(t=>{const e=t.length/4;for(let s=1;s<e;s++){const n=t[4*s+0],r=t[4*s+1],h=t[4*s+2],u=new w(5,0,0).cross(new w(n,r,h),new w(0,1,0));for(let a=s;a<e;a++){const e=i([n,r,h],0,u);t[4*a+0]=e[0],t[4*a+1]=e[1],t[4*a+2]=e[2]}}return t})}}},Stem:{name:"Stem",type:"stem",outputs:["plant"],state:{origin:{type:"vec3",internal:!1},height:{type:"number",inputType:"slider",min:0,max:5,step:.05,value:0},thiccness:{type:"number",inputType:"slider",min:0,max:.2,step:.01,value:0},amount:{type:"number",min:0,max:20,value:1}},computeNode:t=>({type:"stem",parameters:t}),computeSkeleton(t,e){const s=e.getSetting("stemResY"),n=[];for(let t=0;t<1;t++){const t=new Float32Array(4*s);for(let e=0;e<s;e++){const n=e/s,i=0+3*n,r=0;t[4*e+0]=0,t[4*e+1]=i,t[4*e+2]=r,t[4*e+3]=.4*(1-n)}n.push(t)}return{skeletons:n}},computeGeometry(t,n){const i=n.getSetting("stemResX");return{geometry:e(...t.result.skeletons.map(t=>s(t,i)))}}},Output:{name:"Output",type:"output",outputs:[],state:{main:{type:"plant",label:"plant",internal:!1}},computeNode:t=>({type:"output",parameters:t})}});export default Z;
//# sourceMappingURL=index.modern.js.map
