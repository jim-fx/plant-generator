!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@plantarium/helpers"),require("@plantarium/geometry"),require("@plantarium/nodes")):"function"==typeof define&&define.amd?define(["exports","@plantarium/helpers","@plantarium/geometry","@plantarium/nodes"],t):t((e=e||self).generator={},e.helpers,e.geometry,e.Nodes)}(this,function(e,t,r,n){function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;var a={};n.forEach(function(e){a[e.type]=e});var u={};n.forEach(function(e){u[e.type]=e});var i,l="",p=t.logger("gen.plant"),f=function(e){return"object"==typeof e&&"type"in e};Object.defineProperty(e,"ground",{enumerable:!0,get:function(){return r.ground}}),e.plant=function(e,t){var n=function(e){var t=JSON.stringify(e);return t!==l&&(l=t,i=function(e){return{handleParameter:function(e,t){return t},getSetting:function(t,r){var n;return console.log("CTX GET",t,e[t]),null!=(n=e[t])?n:r},get seed(){return Math.random()},refresh:function(){return Math.random()}}}(e)),i}(t);console.log(e,n);var c=function e(t,r){p("skeleton."+t.type,t);var n={};return Object.entries(t.parameters).forEach(function(t){var o=t[1];n[t[0]]=f(o)?e(o,r):o}),t.parameters=n,t.result=function(e,t){return e.type in a?a[e.type].computeSkeleton(e,t):e.result}(t,r),p("skeleton."+t.type,t.result),t}(e,n);p("final skeleton",c);var s=function e(t,r){p("geometry."+t.type,t);var n={};return Object.entries(t.parameters).forEach(function(t){var o=t[1];n[t[0]]=f(o)?e(o,r):o}),t.parameters=n,t.result=o({},t.result,function(e,t){return e.type in u?u[e.type].computeGeometry(e,t):e.result}(t,r)),p("geometry."+t.type,t.result),t}(c,n);p("geo",s);var y=s.result;return y.geometry=r.calculateNormals(y.geometry),y}});
//# sourceMappingURL=index.umd.js.map
