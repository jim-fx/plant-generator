var e,r=require("@plantarium/helpers"),t=require("@plantarium/geometry"),n=(e=require("@plantarium/nodes"))&&"object"==typeof e&&"default"in e?e.default:e;function o(){return(o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var u={};n.forEach(function(e){u[e.type]=e});var a={};n.forEach(function(e){a[e.type]=e});var i,c="",l=r.logger("gen.plant"),p=function(e){return"object"==typeof e&&"type"in e};Object.defineProperty(exports,"ground",{enumerable:!0,get:function(){return t.ground}}),exports.plant=function(e,r){var n=function(e){var r=JSON.stringify(e);return r!==c&&(c=r,i=function(e){return{handleParameter:function(e,r){return r},getSetting:function(r){return e[r]},get seed(){return Math.random()},refresh:function(){return Math.random()}}}(e)),i}(r);console.log(e,n);var f=function e(r,t){l("skeleton."+r.type,r);var n={};return Object.entries(r.parameters).forEach(function(r){var o=r[1];n[r[0]]=p(o)?e(o,t):o}),r.parameters=n,r.result=function(e,r){return e.type in u?u[e.type].computeSkeleton(e,r):e.result}(r,t),l("skeleton."+r.type,r.result),r}(e,n);l("final skeleton",f);var s=function e(r,t){l("geometry."+r.type,r);var n={};return Object.entries(r.parameters).forEach(function(r){var o=r[1];n[r[0]]=p(o)?e(o,t):o}),r.parameters=n,r.result=o({},r.result,function(e,r){return e.type in a?a[e.type].computeGeometry(e,r):e.result}(r,t)),l("geometry."+r.type,r.result),r}(f,n);l("geo",s);var y=s.result;return y.geometry=t.calculateNormals(y.geometry),y};
//# sourceMappingURL=index.js.map
