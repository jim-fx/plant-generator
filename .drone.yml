---
name: default
kind: pipeline

clone:
  disable: true

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - .
  - name: clone
    image: alpine/git
    commands:
      - "[ ! -d '.git' ] && git clone $DRONE_REMOTE_URL ."
      - git fetch --all
      - git checkout $DRONE_BRANCH
      - git reset --hard
      - git pull
      - echo "[$(git log --pretty=format:'{"id":"%h","subject":"%s","date":"%cD"},')]" | sed 's/,]/]/g' > frontend/public/commits.json
    depends_on:
      - restore-cache
  - name: install
    image: node:alpine
    commands:
      - npm i -g pnpm
      - pnpm config set store-dir $(pwd)/.pnpm-store
      - pnpm install
    depends_on:
      - clone
  - name: lint
    image: node:alpine
    commands:
      - npm i -g pnpm
      - pnpm lint
    depends_on:
      - install
  - name: build
    image: node:alpine
    environment:
      VITE_API_URL:
        from_secret: API_URL
    commands:
      - npm i -g pnpm
      - pnpm build
      - cp -r packages/geometry/public frontend/dist/geometry
      - cp -r packages/ui/dist frontend/dist/ui
      - cp -r admin/build frontend/dist/admin
      - cp -r packages/nodesystem/public frontend/dist/nodesild
    depends_on:
      - install
  - name: test
    image: node:alpine
    commands:
      - npm i -g pnpm
      - rm -rf coverage
      - pnpm coverage
      - mv coverage frontend/dist/coverage
    depends_on:
      - install
  - name: coverage-publish
    image: plugins/codecov
    failure: ignore
    settings:
      name: plantarium
      token:
        from_secret: CODECOV_TOKEN
      paths:
        - .nyc_output
        - coverage
        - frontend/dist/coverage
    depends_on:
      - test
  - name: rebuild-cache
    failure: ignore
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - .
    depends_on:
      - build
volumes:
  - name: cache
    host:
      path: /tmp/cache

---
name: deploy-feature
kind: pipeline

clone:
  disable: true

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - .
  - name: deploy-frontend-feature
    image: alpacadb/docker-lftp
    environment:
      FTP_USERNAME:
        from_secret: FTP_USERNAME
      FTP_PASSWORD:
        from_secret: FTP_PASSWORD
    commands:
      - cd frontend/dist
      - lftp -e "set sftp:auto-confirm true; set ftp:ssl-force true; set xfer:timeout 10000; debug 3; open -u $FTP_USERNAME,$FTP_PASSWORD sftp://ssh.jim-fx.com:2221; mkdir -p share/plant/$DRONE_BRANCH; cd share/plant/$DRONE_BRANCH; mirror -p --scan-all-first --overwrite --verbose -R --skip-noaccess; quit;"

depends_on:
  - default

volumes:
  - name: cache
    host:
      path: /tmp/cache

trigger:
  branch:
    - feat/*

---
name: deploy-dev
kind: pipeline

clone:
  disable: true

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - .
  - name: deploy-frontend-dev
    image: alpacadb/docker-lftp
    environment:
      FTP_USERNAME:
        from_secret: FTP_USERNAME
      FTP_PASSWORD:
        from_secret: FTP_PASSWORD
    commands:
      - cd frontend/dist
      - lftp -e "set sftp:auto-confirm true; set ftp:ssl-force true; set xfer:timeout 10000; debug 3; open -u $FTP_USERNAME,$FTP_PASSWORD sftp://ssh.jim-fx.com:2221; mkdir -p share/plant/dev; cd share/plant/dev; mirror -p --scan-all-first --overwrite --verbose -R --skip-noaccess; quit;"

depends_on:
  - default

volumes:
  - name: cache
    host:
      path: /tmp/cache

trigger:
  branch:
    - dev

---
name: deploy-prod
kind: pipeline

clone:
  disable: true

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - .
  - name: deploy-backend
    image: plugins/webhook
    settings:
      urls:
        from_secret: BACKEND_WEBHOOK
  - name: deploy-frontend
    image: alpacadb/docker-lftp
    environment:
      FTP_USERNAME:
        from_secret: FTP_USERNAME
      FTP_PASSWORD:
        from_secret: FTP_PASSWORD
    commands:
      - cd frontend/dist
      - lftp -e "set sftp:auto-confirm true; set ftp:ssl-force true; set xfer:timeout 10000; debug 3; open -u $FTP_USERNAME,$FTP_PASSWORD sftp://ssh.jim-fx.com:2221; mkdir -p share/plant; cd share/plant; mirror -p --scan-all-first --overwrite --verbose -R --skip-noaccess; quit;"

depends_on:
  - default

volumes:
  - name: cache
    host:
      path: /tmp/cache

trigger:
  branch:
    - main
